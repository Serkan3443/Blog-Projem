@model BlogSitem.DLL.BlogSiteDatabase.Yetkiler

@{
    ViewBag.Title = "AdminYetkiGuncelle";
    Layout = "~/Areas/AdminPanel/Views/Shared/_AdminLayout.cshtml";
}

<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0">
                </h1>
            </div><!-- /.col -->
            <div class="col-sm-6">

                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="~/AdminPanel/AdminYetkiler/AdminYetkilerIndex">Yetkiler</a></li>
                    <li class="breadcrumb-item active">Yetki Güncelle</li>
                </ol>
            </div><!-- /.col -->
        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
</div>

<section class="content">
    <div class="container-fluid">


        <div class="row">
            <div class="col-12">
                <div class="card">
                    <!-- /.card-header -->
                    <div class="card-body">

                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">
                                <h4>Yetkiler</h4>
                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.YetkilerID)

                                <div class="form-group">
                                    @Html.LabelFor(model => model.AktifMi, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-2">
                                        <div class="checkbox">
                                            @Html.EditorFor(model => model.AktifMi)
                                            @Html.ValidationMessageFor(model => model.AktifMi, "", new { @class = "text-danger" })
                                        </div>

                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.YetkiAdi, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        <div class="form-group">
                                            <input type="text" name="yetkiAdi" class="form-control" id="yetkiAdi" value="@Model.YetkiAdi" />
                                        </div>
                                    </div>
                                </div>



                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Güncelle" class="btn btn-warning" />
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section addBottomLibrary{
    <script src="/TemplateAdmin/plugins/jquery-validation/jquery.validate.min.js"></script>
    <script src="/TemplateAdmin/plugins/summernote/summernote-bs4.min.js"></script>
    <script>
    $(function () {
            // Summernote
            /* $('#menuAciklama').summernote()*/
        })
        $(function () {
            //$.validator.setDefaults({
            //    submitHandler: function () {
            //        alert("Form successful submitted!");
            //    }
            //});
            $('#makaleEkleForm').validate({
                rules: {
                    yetkiAdi: {
                        required: true,
                    },
                    messages: {
                        yetkiAdi: {
                            required: "Yetki Adı alanı zorunludur."
                        },
                        errorElement: 'span',
                        errorPlacement: function (error, element) {
                            error.addClass('invalid-feedback');
                            element.closest('.form-group').append(error);
                        },
                        highlight: function (element, errorClass, validClass) {
                            $(element).addClass('is-invalid');
                        },
                        unhighlight: function (element, errorClass, validClass) {
                            $(element).removeClass('is-invalid');
                        }
                    });
        });</script>
}
